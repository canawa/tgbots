import random

from pyexpat.errors import messages
from supabase import Client, create_client
from sys import excepthook
from config import url,key
import secrets
import asyncio
from config import token
from aiogram import*
from aiogram.filters import CommandStart, Command
from aiogram.types import BotCommand

supabase : Client = create_client(url,key)

bot = Bot(token=token)
dp = Dispatcher()
welcome_text = ("<b>üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –†–∞–Ω–¥–æ–º—É—Å –ë–æ—Ç!</b> üé≤\n\n"
    "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:\n"
    "üéØ –í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /random –∏ —É–∫–∞–∂–∏ –¥–∏–∞–ø–∞–∑–æ–Ω.\n"
    "üé≤ –ü–æ—Ç—è–Ω—É—Ç—å –∂—Ä–µ–±–∏–π ‚Äî –≤—ã–±–µ—Ä–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n"
    "‚ö° –ë—ã—Å—Ç—Ä–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∫–æ–≥–¥–∞ –Ω–µ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Å–∞–º.\n\n"
    "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å!\n\n"
    "–ì–æ—Ç–æ–≤? <b> –ü–æ–µ—Ö–∞–ª–∏! </b> üöÄ")
# –∞
help_answer = (
    "üìö –ü–æ–º–æ—â—å ‚Äî –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n\n"
    "<b>/start</b> ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ üëã\n"
    "<b>/random [min] [max]</b> ‚Äî –í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç min –¥–æ max üé≤\n"
    "<b>/lottery [–≤–∞—Ä–∏–∞–Ω—Ç—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é]</b> ‚Äî –ü–æ—Ç—è–Ω—É—Ç—å –∂—Ä–µ–±–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ üéüÔ∏è\n"
    "<b>/coinflip</b> - –ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É! ü™ô \n"
    "<b>/id</b> - –£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ üë®\n"
    "<b>/dice</b> - –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫"
    "<b>/help</b> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ ‚ÑπÔ∏è\n\n"
    "–ü—Ä–∏–º–µ—Ä:\n"
    "<b>/random 1 100</b> ‚Äî –≤—ã–±–µ—Ä–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100\n"
    "<b>/lottery —è–±–ª–æ–∫–æ –±–∞–Ω–∞–Ω –≥—Ä—É—à–∞</b> ‚Äî –≤—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ—Ä—É–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞\n\n"
    "–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ ‚Äî –ø–∏—à–∏ —Å—é–¥–∞: @yatogotsirka\n\n"
    "–£–¥–∞—á–∏ –∏ –ø—É—Å—Ç—å —Ñ–æ—Ä—Ç—É–Ω–∞ –±—É–¥–µ—Ç –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ! üçÄ"
)


@dp.message(CommandStart()) # —Ö–µ–Ω–¥–ª–µ—Ä —Å–ª—É—à–∞–µ—Ç –∏ –∂–¥–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
async def cmd_start(message):
    await message.answer(welcome_text,parse_mode = 'HTML')
    try:
        response = supabase.table('randombot').insert({'telegram_id': message.from_user.username}).execute()
    except Exception as error:
        print(error)
@dp.message(Command('help'))
async def cmd_help(message):
    await message.answer(help_answer, parse_mode = 'HTML')
@dp.message(Command('coinflip'))
async def cmd_coinflip(message):
    await message.answer('–í—ã–ø–∞–ª –û—Ä–µ–ª! ü¶Ö (50%)' if secrets.randbelow(2)==1 else '–í—ã–ø–∞–ª–∞ –†–µ—à–∫–∞! üí∞ (50%)')
@dp.message(Command('random'))
async def cmd_random(message):
    args = message.text.split()[1:]
    args = list(map(int,args))
    if len(args)==2:
        if args[0] > args[1]:
            await message.answer(f'{random.randint(args[1],args[0])}')
        else:
            await message.answer(f'{random.randint(args[0],args[1])}')
    else:
        await message.answer('‚ùó –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: <b>/random [min] [max]</b>\n–ü—Ä–∏–º–µ—Ä: <b>/random 1 100</b>', parse_mode='HTML')


@dp.message(Command('lottery'))
async def cmd_lottery(message):
    args = message.text.split()[1:]
    if len(args)==2:
        await message.answer(f'–í–∞–º –≤—ã–ø–∞–ª–æ: {secrets.choice(args)} ' )
    else:
        await message.answer(
            '‚ùó –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: <b>/lottery –≤–∞—Ä–∏–∞–Ω—Ç1 –≤–∞—Ä–∏–∞–Ω—Ç2 .... –≤–∞—Ä–∏–∞–Ω—Ç100</b>\n –ü—Ä–∏–º–µ—Ä: <b>/lottery –ñ–µ–Ω—è –ö–æ–ª—è –ê—Ä—Ç—ë–º</b>',parse_mode='HTML')

@dp.message(F.text == '–ü—Ä–∏–≤–µ—Ç!') # –≤ F.text —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º—ã –µ–≥–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º
async def cmd_hello(message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ –Ω–µ —Å–ª–æ–∂–Ω–æ, –ø–æ–¥–µ–ª–∏—Å—å —ç—Ç–∏–º –±–æ—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏!')

@dp.message(F.sticker)
async def sticker_response(message):
    await message.answer('üòÇ')

@dp.message(Command('id'))
async def cmd_id(message):
    await message.answer(
    f"üÜî <b>–í–∞—à –ê–π–¥–∏:</b> {message.from_user.id}\n"
    f"üë§ <b>–ò–º—è:</b> {message.from_user.first_name}\n"
    f"üë• <b>–§–∞–º–∏–ª–∏—è:</b> {message.from_user.last_name or '‚Äî'}\n"
    f"üîó <b>–Æ–∑–µ—Ä–Ω–µ–π–º:</b> @{message.from_user.username or '–Ω–µ—Ç'}\n"
    f"üåü <b>–¢–µ–ª–µ–≥—Ä–∞–º –ü—Ä–µ–º–∏—É–º:</b> {message.from_user.is_premium}",
    parse_mode="HTML"
)

@dp.message(Command('dice'))
async def cmd_dice(message):
    dice = await message.answer_dice(emoji='üé≤') # –∫–∏–Ω—É—Ç—å –¥–∞–π—Å, —Ç—É—Ç –ª–∏–±–æ –∫—É–±–∏–∫, –ª–∏–±–æ –¥–∞—Ä—Ç—Å –ª–∏–±–æ –±–∞—Å–∫–µ—Ç –∫–æ–ª—å—Ü–æ
    await asyncio.sleep(5)
    await message.answer(f'üî• –í–∞–º –≤—ã–ø–∞–ª–æ - {dice.dice.value}!')

async def main():
    print('connection success')
    await bot.set_my_commands([
        BotCommand(command="start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ üëã"),
        BotCommand(command="help", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚ÑπÔ∏è"),
        BotCommand(command="random", description="–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ üé≤"),
        BotCommand(command="lottery", description="–¢—è–Ω—É—Ç—å –∂—Ä–µ–±–∏–π üéüÔ∏è"),
        BotCommand(command="coinflip", description="–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞ ü™ô"),
        BotCommand(command="dice", description="–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤"),
        BotCommand(command="id", description="–£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ üÜî"),
    ])
    await dp.start_polling(bot)




if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('exit ')
    print('–∏–≥—Ä–∞–µ–º')